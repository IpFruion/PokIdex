{"version":3,"sources":["scanner.js","util.js","profile.js","newcard.js","load.js","index.js"],"names":["Scanner","props","state","image","dataUri","uri","Promise","resolve","reject","canvas","document","createElement","context","getContext","Image","addEventListener","width","height","drawImage","cv","imread","src","then","mat","console","log","exact","path","render","history","Container","className","Row","Button","onClick","push","idealFacingMode","FACING_MODES","ENVIRONMENT","idealResolution","imageCompression","isMaxResolution","isImageMirror","isSilentMode","isDisplayStartCameraError","isFullscreen","sizeFactor","onTakePhoto","takePhoto","React","Component","DateTimeInterval","obj","this","time","intervalSelector","milliseconds","seconds","minutes","hours","days","timeSelector","Math","floor","date","setTime","getTime","interval","str","toObj","toString","MONEY_REGEX","Error","SOLD_RESULTS_REGEX","CARD_UPDATE_TIMEOUT","CARD_NAME_REGEX","CARD_NUMBER_SLASH_NUMBER_REGEX","CARD_NUMBER_REGEX","CARD_PACK_NUMBER_REGEX","POKE_CARD_VALIDATOR","cardName","match","id","PokeCard","_parseId","e","quantity","n","Number","isInteger","formatURL","url","params","formatted","Object","keys","length","entries","key","value","encodeURI","substring","number","secondNumber","lastUpdated","costEstimate","highValue","lowValue","artist","imageUrl","String","Date","all","_updateCardData","_updateCostData","values","catch","err","bind","name","fetch","res","text","JSON","parse","cards","cardObj","CORS_ANYWHERE","q","bt","DOMParser","parseFromString","doc","i","scripts","type","textContent","Array","isArray","estimate","description","substr","offers","lowPrice","highPrice","card","assign","cardSlashMatch","cardNumberMatch","cardPackMatch","cardNameError","quantityError","DexProfile","snapshot","totalCardsCost","getTotalCardEstimate","_takeSnapshotToHistory","now","checkDate","addToDateObj","force","cardsToUpdate","updates","updateData","num","scale","total","round","stringify","profile","fromObj","jsonString","Profile","forceUpdateButton","data","dexProfile","prevProfile","Card","style","margin","Img","Body","Title","Subtitle","Text","variant","Footer","updatedSinceString","getCardView","CardColumns","fluid","fileName","element","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","downloadTextFile","getBlob","checkIfCardsNeedUpdate","updateCards","setState","error","component","onError","prefix","xtitle","ytitle","getChartData","getPokeCards","NewCard","currentCard","submitData","form","parseEntries","addCardToDex","resetForm","msg","setFieldError","errors","message","Toast","show","onClose","delay","autohide","Header","marginRight","alt","toLocaleString","onSubmit","initialValues","validate","validateCard","touched","handleChange","handleSubmit","handleBlur","Form","noValidate","Group","Label","Control","onChange","isValid","isInvalid","placeholder","Feedback","getToast","LoadDex","main","createRef","showLoad","loadFile","progress","reader","FileReader","event","fromJSON","target","result","onLoadedDex","loaded","size","readAsText","accept","files","uploadFile","ProgressBar","animated","getLoadFile","App","addCard","setTimeout","Alert","errorFunc","getErrorStatus","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.82803908.chunk.js","sourcesContent":["/* global cv */\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Camera, FACING_MODES } from 'react-html5-camera-photo';\nimport { Container, Row, Button, } from 'react-bootstrap';\nimport 'react-html5-camera-photo/build/css/index.css';\n// import ReactDOM from 'react-dom';\n\nfunction imageDataUriToMat(uri) {\n  return new Promise(function(resolve, reject) {\n    if (uri == null) {\n      return reject();\n    }\n    let canvas = document.createElement('canvas');\n    let context = canvas.getContext('2d');\n    let image = new Image();\n    image.addEventListener('load', function() {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      resolve(cv.imread(canvas));\n    })\n    image.src = uri;\n    // const base64data = uri.replace('data:image/jpeg;base64','').replace('data:image/png;base64','');\n    // const buffer = Buffer.from(base64data,'base64');\n    // return cv.imdecode(buffer);\n  });\n}\n\nexport class Scanner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n    }\n  }\n\n  takePhoto(dataUri) {\n    imageDataUriToMat(dataUri).then(function (mat) {\n      console.log(mat);\n    });\n  }\n\n  render() {\n    return (\n      <Route exact={true} path=\"/scanner\" render={({history}) => (\n        <Container className=\"mt-4\">\n          <Row>\n            <Button className=\"rounded-pill px-4\" onClick={() => history.push(\"/profile\")}>Profile</Button>\n          </Row>\n          <Row>\n            <Camera\n              idealFacingMode={FACING_MODES.ENVIRONMENT}\n              idealResolution = {{width: 640, height: 480}}\n              imageCompression = {0.97}\n              isMaxResolution = {false}\n              isImageMirror = {false}\n              isSilentMode = {true}\n              isDisplayStartCameraError = {true}\n              isFullscreen = {false}\n              sizeFactor = {1}\n              onTakePhoto = {this.takePhoto}\n            />\n          </Row>\n        </Container>\n      )}/>\n    )\n  }\n}\n","\nfunction roundNumber(num, scale) {\n  return +(Math.round(num + \"e+\" + scale) + \"e-\" + scale);\n}\n\nclass DateTimeInterval {\n  constructor(obj) {\n    this.time = 0;\n    let intervalSelector = 1;\n    if (obj) {\n      if (obj.milliseconds) {\n        this.time += obj.milliseconds * intervalSelector;\n      }\n      intervalSelector *= 1000;\n      if (obj.seconds) {\n        this.time += obj.seconds * intervalSelector;\n      }\n      intervalSelector *= 60;\n      if (obj.minutes) {\n        this.time += obj.minutes * intervalSelector;\n      }\n      intervalSelector *= 60;\n      if (obj.hours) {\n        this.time += obj.hours * intervalSelector;\n      }\n      intervalSelector *= 24;\n      if (obj.days) {\n        this.time += obj.days * intervalSelector;\n      }\n    }\n  }\n\n  toObj() {\n    const obj = {};\n    let timeSelector = this.time;\n    obj.milliseconds = timeSelector % 1000;\n    timeSelector = Math.floor(timeSelector / 1000);\n    obj.seconds = timeSelector % 60;\n    timeSelector = Math.floor(timeSelector / 60);\n    obj.minutes = timeSelector % 60;\n    timeSelector = Math.floor(timeSelector / 60);\n    obj.hours = timeSelector % 24;\n    timeSelector = Math.floor(timeSelector / 24);\n    obj.days = timeSelector;\n    return obj;\n  }\n\n  addToDateObj(date) {\n    date.setTime(date.getTime() + this.time);\n  }\n\n  addInterval(interval) {\n    return new DateTimeInterval({milliseconds: this.time + interval.time});\n  }\n\n  toString() {\n    let str = \"\";\n    const obj = this.toObj();\n    if (obj.days > 0) {\n      str += obj.days.toString() + \"days \";\n    }\n    if (obj.hours > 0) {\n      str += obj.hours.toString() + \"hrs \";\n    }\n    if (obj.minutes > 0) {\n      str += obj.hours.toString() + \"mins \";\n    }\n    if (obj.seconds > 0) {\n      str += obj.seconds.toString() + \"secs \";\n    }\n    // if (obj.milliseconds > 0) {\n    //   str += obj.milliseconds.toString() + \"millisecs\";\n    // }\n    return str;\n  }\n}\n\nexport class ValidationError extends Error {\n  constructor(msg, fieldName) {\n    super(msg);\n    this.fieldName = fieldName;\n  }\n}\n\nconst MONEY_REGEX = /\\$(([1-9]\\d{0,2}(,\\d{3})*)|(([1-9]\\d*)?\\d))(\\.\\d\\d)/;\nconst SOLD_RESULTS_REGEX = /^\\D*([\\d])/;\nconst CARD_UPDATE_TIMEOUT = new DateTimeInterval({days: 3});\nconst CORS_ANYWHERE = 'https://cors-anywhere.herokuapp.com/';\nconst MAVIN_URL = CORS_ANYWHERE + \"https://mavin.io/search\";\nconst POKEMON_TCG_URL = 'https://api.pokemontcg.io/v1/cards';\n\nconst CARD_NAME_REGEX = /^[a-zA-Z ]*$/;\nconst CARD_NUMBER_SLASH_NUMBER_REGEX = /^(\\d{1,3})[/](\\d{1,3})$/;\nconst CARD_NUMBER_REGEX = /^(\\d{1,3})$/\nconst CARD_PACK_NUMBER_REGEX = /^[A-Z]*(\\d{1,3})$/;\n\nexport const POKE_CARD_VALIDATOR = {\n  cardName: cardName => {\n    if (!cardName) {\n      return new Error(\"Card Name is required\");\n    }\n    const cardNameMatch = cardName.match(CARD_NAME_REGEX);\n    if (!cardNameMatch) {\n      return new Error(\"Card Name can't have numbers or other characters\");\n    }\n  },\n  id: id => {\n    try {\n      PokeCard._parseId(id);\n    } catch (e) {\n      return e;\n    }\n    return null;\n  },\n  quantity: quantity => {\n    if (!quantity) {\n      return new Error(\"Quantity is required\");\n    }\n    if (!quantity.match(/^\\d*$/)) {\n      return new Error(\"Quantity must be a number\");\n    }\n    const n = Number(quantity);\n    if (!Number.isInteger(n)) {\n      return new Error(\"Quantity must be an integer number\");\n    }\n    if (n < 1) {\n      return new Error(\"Quantity must be greater than or equal to 1\");\n    }\n  }\n\n}\n\nexport function downloadTextFile(fileName, data) {\n  const element = document.createElement(\"a\");\n  const file = new Blob([data], {type: 'text/plain'});\n  element.href = URL.createObjectURL(file);\n  element.download = fileName;\n  document.body.appendChild(element); // Required for this to work in FireFox\n  element.click();\n}\n\nfunction formatURL(url, params) {\n  let formatted = url;\n  if (Object.keys(params).length > 0) {\n    formatted += \"?\";\n  }\n  for (const [key, value] of Object.entries(params)) {\n    formatted += key + \"=\";\n    formatted += encodeURI(value) + \"&\";\n  }\n  formatted = formatted.substring(0, formatted.length-1);\n  return formatted;\n}\n\nexport class PokeCard {\n  constructor(cardName, id, number, secondNumber, quantity) {\n    this.cardName = cardName;\n    this.id = id;\n    this.number = number;\n    this.quantity = quantity;\n    this.secondNumber = secondNumber;\n\n    //Values gained from websites\n    this.lastUpdated = null;\n    this.costEstimate = null;\n    this.highValue = null;\n    this.lowValue = null;\n    this.artist = null;\n    this.imageUrl = null;\n  }\n\n  toString() {\n    return this.cardName + \" \" + String(this.id);\n  }\n\n  updatedSinceString() {\n    const interval = new DateTimeInterval({milliseconds: (new Date()).getTime() - this.lastUpdated.getTime()});\n    let intervalStr = \"Last Updated \" + interval.toString() + \" ago\";\n    return intervalStr;\n  }\n\n  updateData() {\n    const promiseFn = function(resolve, reject) {\n      Promise.all([this._updateCardData(), this._updateCostData()]).then(values =>{\n        this.lastUpdated = new Date();\n        resolve(this);\n      }).catch(err => reject(err));\n    };\n    return new Promise(promiseFn.bind(this));\n  }\n\n  _updateCardData() {\n    const url = formatURL(POKEMON_TCG_URL, {\n      name: this.cardName,\n      number: Number(this.number).toString(),\n    });\n    return fetch(url)\n      .then(res => res.text())\n      .then(text => JSON.parse(text))\n      .then(obj => {\n        if (obj.cards.length > 0) {\n          const cardObj = obj.cards[0];\n          this.artist = cardObj.artist;\n          this.imageUrl = cardObj.imageUrl;\n        }\n      });\n  }\n\n  _updateCostData() {\n    // TODO: Fix for not using proxy service for the requests possible port to server side data (depending on popularity)\n    const url = formatURL(MAVIN_URL, {\n      q: this.cardName + \" \" + this.id,\n      bt: \"sold\",\n    });\n    return fetch(url)\n      .then(res => res.text())\n      .then(text => {\n        const parser = new DOMParser();\n        return parser.parseFromString(text, 'text/html');\n      })\n      .then(doc => {\n        const scripts = doc.scripts;\n        let i;\n        for (i = 0; i < scripts.length; i++) {\n          if (scripts[i].type === 'application/ld+json') {\n            let obj = JSON.parse(scripts[i].textContent);\n            if (Array.isArray(obj)) {\n              obj = obj[0];\n            }\n            if (obj[\"@type\"] === \"ProductGroup\") {\n              const estimate = obj.description.match(MONEY_REGEX)[0];\n              this.costEstimate = Number(estimate.substr(1, estimate.length));\n              this.lowValue = Number(obj.offers.lowPrice);\n              this.highValue = Number(obj.offers.highPrice);\n            }\n            if (obj[\"@type\"] === \"Article\") {\n              const match = obj[\"articleBody\"].match(SOLD_RESULTS_REGEX);\n              if (match && Number(match[1]) === 0) {\n                throw new Error(\"Zero Sold Results Found\");\n              }\n            }\n          }\n        }\n      });\n  }\n  static fromObj(obj) {\n    const card = Object.assign(new PokeCard(), obj);\n    // Verify card?\n    // card.verifyCard();\n    card.lastUpdated = new Date(card.lastUpdated);\n    return card;\n  }\n\n  static _parseId(id) {\n    if (!id) {\n      throw new Error(\"Card Numbers is required\");\n    }\n    const cardSlashMatch = id.match(CARD_NUMBER_SLASH_NUMBER_REGEX);\n    const cardNumberMatch = id.match(CARD_NUMBER_REGEX);\n    const cardPackMatch = id.match(CARD_PACK_NUMBER_REGEX);\n    let number = null;\n    let secondNumber = null;\n    if (cardSlashMatch) {\n      if (Number(cardSlashMatch[1]) > Number(cardSlashMatch[2])) {\n        throw new Error(\"Card Numbers must be in order i.e. firstNum <= secondNum\");\n      }\n      number = cardSlashMatch[1];\n      secondNumber = cardSlashMatch[2];\n    } else if (cardNumberMatch) {\n      number = cardNumberMatch[1];\n    } else if (cardPackMatch) {\n      number = cardPackMatch[1];\n    } else {\n      throw new Error(\"Card Numbers must be in the form of 'num/num' or 'num' or '<packname><num>'\");\n    }\n    return [number, secondNumber];\n  }\n\n  static parseEntries(cardName, id, quantity) {\n    const cardNameError = POKE_CARD_VALIDATOR[\"cardName\"](cardName);\n    if (cardNameError) {\n      throw cardNameError;\n    }\n    const [number, secondNumber] = PokeCard._parseId(id);\n    const quantityError = POKE_CARD_VALIDATOR[\"quantity\"](quantity);\n    if (quantityError) {\n      throw quantityError;\n    }\n\n    return new PokeCard(cardName, id, number, secondNumber, quantity)\n  }\n\n\n}\n\nexport class DexProfile {\n  constructor() {\n    this.cards = [];\n    this.history = [];\n    this.lastUpdated = new Date();\n  }\n\n  _takeSnapshotToHistory() {\n    const snapshot = {\n      lastUpdated: this.lastUpdated,\n      totalCardsCost: this.getTotalCardEstimate(),\n    };\n    this.history.push(snapshot);\n  }\n\n  addCard(card) {\n    if (this.lastUpdated) {\n      this._takeSnapshotToHistory();\n    }\n    this.lastUpdated = card.lastUpdated;\n    this.cards.push(card);\n  }\n\n  checkIfCardsNeedUpdate() {\n    let i;\n    const now = new Date();\n    for (i = 0; i < this.cards.length; i++) {\n      const lastUpdated = this.cards[i].lastUpdated;\n      const checkDate = new Date(lastUpdated.getTime());\n      CARD_UPDATE_TIMEOUT.addToDateObj(checkDate);\n      if (now >= checkDate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  updateCards(force) {\n    let i;\n    const cardsToUpdate = [];\n    const now = new Date();\n    for (i = 0; i < this.cards.length; i++) {\n      if (force) {\n        cardsToUpdate.push(this.cards[i]);\n      } else {\n        const lastUpdated = this.cards[i].lastUpdated;\n        const checkDate = new Date(lastUpdated.getTime());\n        CARD_UPDATE_TIMEOUT.addToDateObj(checkDate);\n        if (now >= checkDate) {\n          cardsToUpdate.push(this.cards[i]);\n        }\n      }\n    }\n    if (cardsToUpdate.length > 0) {\n      this._takeSnapshotToHistory();\n      const updates = [];\n      for (i = 0; i < cardsToUpdate.length; i++) {\n        updates.push(cardsToUpdate[i].updateData());\n      }\n      return Promise.all(updates).then((values) => {\n\n        this.lastUpdated = new Date();\n      });\n    }\n    return new Promise((resolve, reject) => reject(new Error(\"No Cards Updated\")));\n  }\n\n  getTotalCardEstimate() {\n    let total = 0.0;\n    let i;\n    for(i = 0; i < this.cards.length; i++) {\n      total = total + this.cards[i].costEstimate;\n    }\n    return roundNumber(total, 2);\n  }\n\n  getBlob() {\n    return JSON.stringify(this);\n  }\n\n  static fromObj(obj) {\n    let profile = new DexProfile();\n    profile = Object.assign(profile, obj);\n    let i;\n    // for (i = 0; i < profile.history.length; i++) {\n    //   profile.history[i] = {\n    //     lastUpdated: profile.history[i].lastUpdated,\n    //     totalCardsCost: profile.history[i].totalCardsCost,\n    //   };\n    // }\n    for (i = 0; i < profile.cards.length; i++) {\n      profile.cards[i] = PokeCard.fromObj(profile.cards[i]);\n    }\n    profile.lastUpdated = new Date(profile.lastUpdated);\n    return profile;\n  }\n\n  static fromJSON(jsonString) {\n    const obj = JSON.parse(jsonString);\n    return DexProfile.fromObj(obj);\n  }\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { downloadTextFile } from './util.js';\nimport { LineChart } from 'react-chartkick'\nimport { Container, Row, Button, Card, CardColumns } from 'react-bootstrap';\nimport 'chart.js'\n\nexport class Profile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      forceUpdateButton: true,\n    }\n  }\n\n  getChartData() {\n    let data = {};\n    let i;\n    for (i = 0; i < this.props.dexProfile.history.length; i++) {\n      const prevProfile = this.props.dexProfile.history[i];\n      data[prevProfile.lastUpdated.toString()] = prevProfile.totalCardsCost;\n    }\n    data[this.props.dexProfile.lastUpdated.toString()] = this.props.dexProfile.getTotalCardEstimate();\n    return data;\n  }\n\n  getCardView(card) {\n    return (\n      <Card style={{ width: '18rem', margin: \"10px\" }}>\n        <Card.Img style={{ height: '200px', width: '100%' }} src={card.imageUrl} />\n        <Card.Body>\n          <Card.Title>{card.cardName}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{card.id}</Card.Subtitle>\n          <Card.Text>\n            Cost Estimate: ${card.costEstimate}\n          </Card.Text>\n          <Button variant=\"primary\">Refresh Card?</Button>\n        </Card.Body>\n        <Card.Footer>\n          <small>{card.updatedSinceString()}</small>\n        </Card.Footer>\n      </Card>\n    );\n  }\n\n  getPokeCards() {\n    const cards = [];\n    let i;\n    for (i = 0; i < this.props.dexProfile.cards.length; i++) {\n      const card = this.props.dexProfile.cards[i];\n      cards.push(this.getCardView(card));\n    }\n    return (\n      <CardColumns className=\"m-4\">\n        {cards}\n      </CardColumns>\n    );\n  }\n\n  render() {\n    return (\n      <Route exact={true} path=\"/profile\" render={({history}) => (\n        <Container fluid className=\"mt-4\">\n          <Row>\n            <Button className=\"btn-poke\" onClick={() => history.push(\"/scanner\")}>Scanner</Button>\n            <Button className=\"btn-poke\" onClick={() => history.push(\"/newcard\")}>Manual Enter Card</Button>\n            {this.props.dexProfile.cards.length > 0 && (\n              <Button className=\"btn-poke\" onClick={() => downloadTextFile(\"profile.dex\", this.props.dexProfile.getBlob())}>Save Dex</Button>\n            )}\n            {this.props.dexProfile.checkIfCardsNeedUpdate() && (\n              <Button className=\"btn-poke\" onClick={() => this.props.dexProfile.updateCards(false)}>Update Cards</Button>\n            )}\n            {this.state.forceUpdateButton && this.props.dexProfile.cards.length > 0 &&\n              <Button className=\"btn-poke-danger\" onClick={() => {\n                this.props.dexProfile.updateCards(true).then(() =>{\n                  this.setState({...this.state, forceUpdateButton: false});\n                }).catch(err => {\n                  const error = {};\n                  error.type = \"warning\";\n                  error.component = (\n                    <h2>{err.toString()}</h2>\n                  );\n                  this.props.onError(error);\n                });\n              }}>Force Update</Button>\n            }\n          </Row>\n          <Row className=\"ml-2\">\n            <h2>Total cards: {this.props.dexProfile.cards.length}</h2>\n          </Row>\n          <Row className=\"ml-2\">\n            <h2>Total price: ${this.props.dexProfile.getTotalCardEstimate()}</h2>\n          </Row>\n          <Row>\n            <LineChart prefix='$' xtitle=\"Time\" ytitle=\"Money\" data={this.getChartData()}/>\n          </Row>\n          <Row>\n            {this.getPokeCards()}\n          </Row>\n        </Container>\n      )}/>\n    );\n  }\n\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { PokeCard, POKE_CARD_VALIDATOR } from './util.js';\nimport { Container, Form, Button, Toast } from 'react-bootstrap';\nimport { Formik } from 'formik';\n\nexport class NewCard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCard: null,\n    }\n    this.submitData = this.submitData.bind(this);\n  }\n\n  submitData(values, form) {\n    const card = PokeCard.parseEntries(values.cardName, values.id, values.quantity);\n    card.updateData().then(card => {\n      this.props.addCardToDex(card);\n      this.setState({...this.state, currentCard: card});\n      form.resetForm();\n    }).catch(err => {\n      const msg = \"Card Data Error\";\n      form.setFieldError(\"cardName\", msg);\n      form.setFieldError(\"cardNumbers\", msg);\n      console.log(err);\n      const error = {};\n      error.type = 'danger';\n      error.component = (\n        <strong>{err.toString()}</strong>\n      );\n      this.props.onError(error);\n    });\n  }\n\n  validateCard(values, props) {\n    const errors = {};\n    for (const [key, value] of Object.entries(values)) {\n      if (POKE_CARD_VALIDATOR[key]) {\n        const error = POKE_CARD_VALIDATOR[key](value);\n        if (error) {\n          errors[key] = error.message;\n        }\n      }\n    }\n    return errors;\n  }\n\n  getToast() {\n    // TODO: Image of pokemon in Toast? And Spinner for timings\n\n    if (this.state.currentCard) {\n      return (\n        <Toast\n          show={!!this.state.currentCard}\n          className='mt-3'\n          onClose={() => this.setState({...this.state, currentCard: null})}\n          delay={10000}\n          autohide\n        >\n          <Toast.Header>\n            <img\n              style={{ height: '40px', width: '20px', marginRight: '5dp' }}\n              src={this.state.currentCard.imageUrl}\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">{this.state.currentCard.cardName}</strong>\n            <small>{this.state.currentCard.lastUpdated.toLocaleString()}</small>\n          </Toast.Header>\n          <Toast.Body>\n            Loaded {this.state.currentCard.cardName} - {this.state.currentCard.id} cost value of ${this.state.currentCard.costEstimate}!\n          </Toast.Body>\n        </Toast>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <Route exact={true} path=\"/newcard\" render={({history}) => (\n        <Container className=\"mt-4\">\n          <Formik\n            onSubmit={this.submitData}\n            initialValues={{\n              cardName: '',\n              id: '',\n              quantity: 1,\n            }}\n            validate={this.validateCard}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group>\n                  <Form.Label>Card Name</Form.Label>\n                  <Form.Control\n                    name=\"cardName\"\n                    onChange={handleChange}\n                    value={values.cardName}\n                    isValid={values.cardName && !errors.cardName}\n                    isInvalid={(values.cardName || touched.cardName) && !!errors.cardName}\n                    type=\"text\"\n                    placeholder=\"Enter Card Name\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.cardName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Card ID Numbers</Form.Label>\n                  <Form.Control\n                    name=\"id\"\n                    onChange={handleChange}\n                    value={values.id}\n                    type=\"text\"\n                    placeholder=\"Enter Card Id\"\n                    isValid={values.id && !errors.id}\n                    isInvalid={(values.id || touched.id) && !!errors.id}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    i.e. \"141/189\" or \"058\" or \"SWSH063\"\n                  </Form.Text>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.id}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Quantity</Form.Label>\n                  <Form.Control\n                    name=\"quantity\"\n                    onChange={handleChange}\n                    value={values.quantity}\n                    isValid={values.quantity && !errors.quantity}\n                    isInvalid={(values.quantity || touched.quantity) && !!errors.quantity}\n                    type=\"text\"\n                    placeholder=\"Quantity\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.quantity}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Button className=\"btn-poke\" type=\"submit\">Submit Card</Button>\n                <Button className=\"btn-poke\" onClick={() => history.push(\"/profile\")}>Profile</Button>\n              </Form>\n              )\n            }\n          </Formik>\n          {this.getToast()}\n        </Container>\n      )}/>\n    );\n  }\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Container, Row, Button, Toast, ProgressBar } from 'react-bootstrap';\nimport { DexProfile } from './util.js';\n\nexport class LoadDex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.main = React.createRef();\n    this.state = {\n      showLoad: false,\n      loadFile: null,\n      progress: -1,\n    }\n  }\n\n  async uploadFile(history) {\n    if (this.state.loadFile) {\n      const reader = new FileReader()\n      reader.addEventListener('load', (event) => {\n        const profile = DexProfile.fromJSON(event.target.result);\n        this.props.onLoadedDex(profile);\n        this.setState({...this.state, loadFile: null, showLoad: false, progress: -1});\n        history.push(\"/profile\");\n      });\n      reader.addEventListener('progress', (event) => {\n        const progress = event.loaded / this.state.loadFile.size * 100;\n        this.setState({...this.state, progress: progress});\n      });\n\n      reader.readAsText(this.state.loadFile);\n    }\n  }\n\n  getLoadFile(history) {\n    const onCloseToast = () => {\n      if (this.state.showLoad) {\n        this.setState({...this.state, showLoad: false});\n      }\n    }\n    const verifyButton = () => {\n      if (this.state.loadFile && this.state.progress === -1) {\n        return (\n          <Button className=\"btn-poke\" onClick={() => this.uploadFile(history)}>Accept</Button>\n        );\n      }\n      return null;\n    }\n    const progressBar = () => {\n      if (this.state.progress >= 0) {\n        return (\n          <ProgressBar variant=\"success\" className=\"mt-2\" animated now={this.state.progress}/>\n        );\n      }\n      return null;\n    }\n    if (this.state.showLoad) {\n      return (\n        <Row className=\"justify-content-md-center mt-4\">\n          <Toast onClose={onCloseToast}>\n            <Toast.Header>\n              <strong className=\"mr-auto\">Load Dex</strong>\n            </Toast.Header>\n            <Toast.Body>\n              <input type=\"file\" name=\".dex file\" accept=\".dex\" onChange={(event) => this.setState({...this.state, loadFile: event.target.files[0]})}/>\n              {verifyButton()}\n              {progressBar()}\n            </Toast.Body>\n          </Toast>\n        </Row>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <Route path=\"/\" render={({history}) => (\n        <Container className=\"mt-4\">\n          {this.getLoadFile(history)}\n          <Row className=\"justify-content-center\">\n            <h1>PokIndex</h1>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Button className=\"btn-poke\" onClick={() => this.setState({...this.state, showLoad: true})}>Load .dex file</Button>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <h2>or</h2>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Button className=\"btn-poke\" onClick={() => {\n              this.props.onLoadedDex(new DexProfile());\n              history.push(\"/profile\");\n            }}>Create new PokIndex</Button>\n          </Row>\n        </Container>\n      )}/>\n\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport { Scanner } from './scanner.js';\nimport { Profile } from './profile.js';\nimport { NewCard } from './newcard.js';\nimport { LoadDex } from './load.js';\nimport './index.scss';\n\n// function NotFound(props) {\n//   let loc = \"/\";\n//   if (props.dexProfile) {\n//     loc = \"/profile\";\n//   }\n//   return (\n//     <div>\n//       <h1>404 - Not Found!</h1>\n//       <Link to={loc}>\n//         Go Home\n//       </Link>\n//     </div>\n//   )\n// }\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dexProfile: null,\n      error: null\n    }\n    this.addCardToDex = this.addCardToDex.bind(this);\n  }\n\n  addCardToDex(card) {\n    //TODO: Check if card already in profile? increment\n    if (this.state.dexProfile && card) {\n      this.state.dexProfile.addCard(card);\n    }\n  }\n\n  getErrorStatus() {\n    if (this.state.error) {\n      setTimeout(() => this.setState({...this.state, error: null}), 10000);\n      return (\n        <Alert show={true} variant={this.state.error.type}>{this.state.error.component}</Alert>\n      );\n    }\n    return null;\n  }\n\n  render () {\n    // <Route render={() => (\n    //   <NotFound dexProfile={this.state.dexProfile}/>\n    // )}/>\n    const errorFunc = (error) => {\n      this.setState({...this.state, error: error})\n    };\n    return (\n      <Router>\n        <Switch>\n          <div>\n            {this.getErrorStatus()}\n            {!this.state.dexProfile &&\n              <LoadDex onError={errorFunc} onLoadedDex={(dexProfile) => this.setState({...this.state, dexProfile: dexProfile})}/>\n            }\n            {this.state.dexProfile && (\n              <div>\n                <Scanner onError={errorFunc} addCardToDex={this.addCardToDex}/>\n                <NewCard onError={errorFunc} addCardToDex={this.addCardToDex}/>\n                <Profile onError={errorFunc} dexProfile={this.state.dexProfile}/>\n              </div>\n            )}\n          </div>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}